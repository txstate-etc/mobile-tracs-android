import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def localProperties = new Properties()
localProperties.load(project.rootProject.file("local.properties").newDataInputStream())


android {
    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "edu.txstate.mobile.tracs"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 4
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                def appName
                if (project.hasProperty("applicationname")) {
                    appName = applicationName
                } else {
                    appName = parent.name
                }
                def date = new Date()
                def dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HHmmss")
                def formattedDate = dateFormat.format(date)
                variant.outputs.all {
                    def newApkName
                    newApkName = "${appName}-${variant.baseName}-${formattedDate}.apk"
                    outputFileName = newApkName
                }
            }
            signingConfig signingConfigs.releaseConfig
            debuggable false
        }
        debug {
        }
        network_test {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //Backwards compatibility with UI
    compile 'com.android.support:appcompat-v7:26.0.0-beta2'
    //HTTP Requests
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    //Analytics library
    compile 'com.google.android.gms:play-services-analytics:10.2.1'
    //Notifications from google's firebase
    compile 'com.google.firebase:firebase-core:10.2.1'
    compile 'com.google.firebase:firebase-messaging:10.2.1'
    //Swipe view support
    compile 'com.android.support:recyclerview-v7:26.0.0-alpha1'
    compile 'com.android.support:support-v4:26.0.0-alpha1'
    //Turns Java Objects into JSON
    compile 'com.google.code.gson:gson:2.8.0'
    //Support for additional layouts
    compile 'com.android.support:design:26.0.0-alpha1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    //Font awesome icons as drawables
    compile 'com.joanzapata.iconify:android-iconify-fontawesome:2.2.2'
    //Testing
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}